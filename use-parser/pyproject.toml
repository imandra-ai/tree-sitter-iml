[project]
name = "use-parser"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "hongyu", email = "hongyu@imandra.ai" }
]
requires-python = ">=3.10"
dependencies = [
    "tree-sitter>=0.25.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "inline-snapshot>=0.28.0",
    "pytest>=8.4.2",
]


[tool.ruff]
line-length = 88
fix = true
show-fixes = true
src = ["src"]
exclude = [
    "*.ipynb",
    "vendor/",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "RUF", # ruff-specific rules
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "PTH", # flake8-use-pathlib
    "SIM", # flake8-simplify
]
ignore = [
    "SIM108", # if-else-block-instead-of-if-exp
    "N801",   # Class name should use CapWords
    "PTH123", # `open()` should be replaced by `Path.open()`
    "C417",   # Unnecessary `map()` usage (rewrite using a generator expression)
]
task-tags = ["HACK"]
pycodestyle.ignore-overlong-task-comments = true
isort.combine-as-imports = true

[tool.ty]
environment.python = ".venv"

[tool.pyright]
venvPath = ".."
venv = ".venv"
